---
# Copyright 2015, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Create ssh key pairs for use with containers
  hosts: 127.0.0.1
  connection: local
  become: false
  pre_tasks:
    - name: Create ssh key pair for root
      user:
        name: "{{ ansible_ssh_user }}"
        generate_ssh_key: "yes"
        ssh_key_bits: 2048
        ssh_key_file: ".ssh/id_rsa"
    - name: get the calling users key
      command: cat ~/.ssh/id_rsa.pub
      register: key_get
    - set_fact:
        lxc_container_ssh_key: "{{ key_get.stdout }}"

- name: Perform basic LXC host setup
  hosts: localhost
  connection: local
  become: yes
  pre_tasks:
    # Make sure OS does not have a stale package cache.
    - name: Update apt cache.
      apt:
        update_cache: yes
      when: ansible_os_family == 'Debian'
    - name: Ensure root's new public ssh key is in authorized_keys
      authorized_key:
        user: root
        key: "{{ hostvars['127.0.0.1']['lxc_container_ssh_key'] }}"
        manage_dir: no
    - set_fact:
        lxc_container_ssh_key: "{{ hostvars['127.0.0.1']['lxc_container_ssh_key'] }}"
  roles:
    - role: "lxc_hosts"
      lxc_net_address: 10.100.100.1
      lxc_net_dhcp_range: 10.100.100.2,10.100.100.253
      lxc_net_bridge: lxcbr0
      lxc_kernel_options:
        - { key: 'fs.inotify.max_user_instances', value: 1024 }
      lxc_container_caches:
        - url: "https://rpc-repo.rackspace.com/container_images/rpc-trusty-container.tgz"
          name: "trusty.tgz"
          sha256sum: "56c6a6e132ea7d10be2f3e8104f47136ccf408b30e362133f0dc4a0a9adb4d0c"
          chroot_path: trusty/rootfs-amd64
  post_tasks:
    # Inventory is being pre-loaded using a post tasks instead of through a dynamic
    #  inventory system. While this is not a usual method for deployment it's being
    #  done for functional testing.
    - name: Create container hosts
      add_host:
        groups: "{{ item.groups }}"
        hostname: "{{ item.name }}"
        inventory_hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.address }}"
        ansible_become: true
        properties:
          service_name: "{{ item.service }}"
        container_networks:
          management_address:
            address: "{{ item.address }}"
            bridge: "lxcbr0"
            interface: "eth1"
            netmask: "255.255.252.0"
            type: "veth"
        physical_host: localhost
        container_name: "{{ item.name }}"
      with_items:
        - { name: "service1", service: "service1", address: "10.100.100.101", groups: "all,all_containers,rabbitmq_all,galera_all,service_all" }
        - { name: "openstack1", service: "openstack1", address: "10.100.100.102", groups: "all,all_containers,heat_all,heat_api,heat_engine,heat_api_cfn,heat_api_cloudwatch,heat_engine_container,heat_apis_container,keystone_all" }